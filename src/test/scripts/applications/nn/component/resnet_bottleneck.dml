#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

source("scripts/nn/networks/resnet.dml") as resnet
source("src/test/scripts/applications/nn/util.dml") as test_util

values_test_bottleneck_forward_1 = function() {
    /*
     * Testing of values for forward pass of basic block against PyTorch.
     */
    strideh = 1; stridew = 1
    C_in = 2; C_base = 2
    Hin = 2; Win = 2
    N = 3
    X = matrix(seq(1, N*C_in*Hin*Win), rows=N, cols=C_in*Hin*Win)
    W_conv1 = matrix("     0.5185197

                          -0.01638347


                          -0.41337225

                          -0.27387595",
                       rows=C_base, cols=C_in*1*1)
    gamma_bn1 = matrix(1, rows=C_base, cols=1)
    beta_bn1 = matrix(0, rows=C_base, cols=1)
    W_conv2 = matrix("    -0.20811445  0.15620266 -0.02045412
                           0.16239561  0.08874698 -0.04675962
                          -0.15071772  0.08203228 -0.15123627

                          -0.05238193  0.14012058 -0.12834892
                          -0.01153079 -0.03199132  0.02700911
                           0.22693978  0.1377839  -0.08849475


                           0.20858495 -0.07665969  0.09709726
                           0.09753416 -0.00713645 -0.21934068
                           0.2215875  -0.05444418  0.16051485

                          -0.14136882 -0.02405146  0.20206784
                          -0.20452432  0.00909661 -0.00307493
                          -0.20145056 -0.0456574  -0.21605067",
                     rows=C_base, cols=C_base*3*3)
    gamma_bn2 = matrix(1, rows=C_base, cols=1)
    beta_bn2 = matrix(0, rows=C_base, cols=1)
    W_conv3 = matrix("     0.1527785

                           0.11908448


                           0.40458113

                           0.01768601


                          -0.2847237

                          -0.25494343


                          -0.26399058

                           0.5500943


                           0.22660124

                          -0.7040346


                           0.12641346

                          -0.09441459


                           0.5158523

                          -0.20682847


                           0.61719567

                           0.21850073",
                    rows=4*C_base, cols=C_base*1*1)
    gamma_bn3 = matrix(1, rows=4*C_base, cols=1)
    beta_bn3 = matrix(0, rows=4*C_base, cols=1)
    # downsample weights
    W_conv4 = matrix("    -0.3727211

                          -0.38662055


                           0.42501384

                          -0.4678393


                          -0.33239904

                           0.38465446


                          -0.5258211

                           0.346785


                           0.43058223

                           0.19192165


                           0.12673676

                           0.27335274


                           0.5349248

                           0.05752403


                          -0.5090851

                           0.6524388",
                    rows=4*C_base, cols=C_in*1*1)
    gamma_bn4 = matrix(1, rows=4*C_base, cols=1)
    beta_bn4 = matrix(0, rows=4*C_base, cols=1)

    weights = list(W_conv1, gamma_bn1, beta_bn1, W_conv2, gamma_bn2, beta_bn2,
                   W_conv3, gamma_bn3, beta_bn3, W_conv4, gamma_bn4, beta_bn4)
    mode = "train"

    ema_mean_bn1 = matrix(0, rows=C_base, cols=1)
    ema_var_bn1 = matrix(0, rows=C_base, cols=1)
    ema_mean_bn2 = matrix(0, rows=C_base, cols=1)
    ema_var_bn2 = matrix(0, rows=C_base, cols=1)
    ema_mean_bn3 = matrix(0, rows=4*C_base, cols=1)
    ema_var_bn3 = matrix(0, rows=4*C_base, cols=1)
    ema_mean_bn4 = matrix(0, rows=4*C_base, cols=1)
    ema_var_bn4 = matrix(0, rows=4*C_base, cols=1)

    ema_means_vars = list(ema_mean_bn1, ema_var_bn1, ema_mean_bn2, ema_var_bn2,
                          ema_mean_bn3, ema_var_bn3, ema_mean_bn4, ema_var_bn4)

    [out, Hout, Wout, ema_means_vars_up] = resnet::bottleneck_block_forward(X, weights, C_in, C_base, Hin, Win,
                                                                strideh, stridew, mode, ema_means_vars)

    Hout_exp = 2
    Wout_exp = 2
    out_expected = matrix("    0.6000617  2.6354597
                               1.3651271  0.14736581

                               0.79244256 3.4513025
                               0.5675593  0.33977485

                               0.         0.
                               0.         0.

                               1.0696087  0.
                               2.9806733  0.6169146

                               0.         0.42738855
                               0.         0.

                               0.         1.3223773
                               0.         0.

                               0.         1.2508607
                               0.         0.

                               0.         0.5346739
                               0.         0.


                               0.         0.
                               0.         0.

                               0.         0.
                               0.         0.

                               0.19081071 0.62350845
                               0.7712998  0.87608457

                               0.6735816  0.
                               0.         0.

                               0.         0.14371195
                               0.28843445 0.3475034

                               0.         0.
                               0.         0.

                               0.         0.
                               0.         0.

                               0.         0.
                               0.         0.


                               0.         0.14938474
                               0.         0.75312185

                               0.         0.
                               0.         0.5097313

                               1.8268178  0.
                               1.3909308  0.

                               0.         0.50544345
                               0.         0.

                               1.492898   0.
                               2.218107   0.67900985

                               0.80380654 0.4615401
                               2.0888937  2.4350812

                               0.58336127 0.9749389
                               1.9210864  2.9139411

                               0.22877222 2.045148
                               1.4386882  3.5448616",
                          rows=N, cols=Hout_exp*Wout_exp*4*C_base)

    test_util::check_all_close(out, out_expected, 0.00001)
}

values_test_bottleneck_forward_2 = function() {
    /*
     * Testing of values for forward pass of basic block against PyTorch.
     */
    strideh = 2; stridew = 2
    C_in = 2; C_base = 4
    Hin = 4; Win = 4
    N = 3
    X = matrix(seq(1, N*C_in*Hin*Win), rows=N, cols=C_in*Hin*Win)
    W_conv1 = matrix("     0.54590577

                           0.11767608


                          -0.22960076

                           0.43695658


                           0.11020315

                           0.5713164


                           0.07730067

                          -0.22300252",
                       rows=C_base, cols=C_in*1*1)
    gamma_bn1 = matrix(1, rows=C_base, cols=1)
    beta_bn1 = matrix(0, rows=C_base, cols=1)
    W_conv2 = matrix("     0.04478061 -0.04519658  0.07014292
                           0.1488037   0.09634326 -0.07286209
                           0.09621079  0.02982104  0.08463918

                          -0.10158418 -0.16498475 -0.06439342
                          -0.12783715  0.1367565   0.04800522
                           0.06903559  0.05271019 -0.00289933

                           0.1304347  -0.11841893  0.01049395
                          -0.1137567   0.051392   -0.05739705
                           0.05106938 -0.03472358  0.13823198

                          -0.09878366 -0.09939967 -0.09940567
                           0.14990713  0.05554186  0.16037513
                          -0.13754605 -0.16531269 -0.13039397


                          -0.11211485  0.06750669  0.05967931
                           0.13848741 -0.0860709  -0.11361863
                           0.0884297  -0.06736742  0.10115398

                          -0.03955011  0.09534098 -0.12949467
                          -0.08410829  0.05081274  0.03523459
                          -0.04249313  0.09934492  0.11330153

                          -0.12086223 -0.08897804  0.15261032
                          -0.05623876 -0.05908607 -0.16126578
                          -0.09544504  0.04163395 -0.02199887

                          -0.120981    0.00390945 -0.11384692
                          -0.14139944 -0.09177711 -0.14586869
                          -0.10612302  0.1666015   0.03147916


                           0.05135995 -0.1554474  -0.10946231
                          -0.05547597  0.02606185 -0.14665356
                          -0.07181218 -0.0997781   0.00046188

                          -0.0620172  -0.01154929 -0.11293828
                          -0.11439919 -0.09723364 -0.05704957
                          -0.13154683  0.13974498 -0.03307734

                           0.14339946  0.05193035 -0.14113283
                           0.1153392  -0.04585747 -0.06388768
                          -0.13834509 -0.16569345  0.0476851

                          -0.03640731  0.06488718 -0.13677725
                           0.12373818 -0.12234229 -0.0287789
                           0.03481162  0.08604197  0.13455172


                           0.15182655 -0.13215369  0.04194455
                          -0.07168766 -0.01826413 -0.12474835
                           0.15180977 -0.12232509  0.08907522

                           0.05857326  0.05415933 -0.0901077
                           0.15149193  0.03662507  0.02144001
                          -0.1468758   0.06996475 -0.02500343

                          -0.07635405  0.14315777  0.03715813
                          -0.09221274 -0.08435649 -0.00795929
                           0.09306021 -0.04258897 -0.09509581

                          -0.05707382 -0.12451248  0.05943875
                           0.1290067  -0.15690672  0.03870845
                           0.08609863  0.03022157 -0.05935411",
                     rows=C_base, cols=C_base*3*3)
    gamma_bn2 = matrix(1, rows=C_base, cols=1)
    beta_bn2 = matrix(0, rows=C_base, cols=1)
    W_conv3 = matrix("     0.26097107

                           0.2627566

                           0.18696362

                          -0.0878607


                          -0.13240063

                           0.05349046

                          -0.08832705

                          -0.14900053


                           0.31960344

                           0.42969978

                          -0.04949868

                          -0.11194843


                           0.00729614

                          -0.02985412

                           0.12020564

                           0.14011681


                          -0.45412838

                          -0.18451887

                           0.42106473

                           0.19477749


                          -0.02486879

                          -0.30145288

                          -0.30590254

                          -0.44788343


                          -0.16298121

                           0.16885209

                           0.31881082

                           0.23084867


                          -0.44197202

                          -0.30068123

                          -0.07890832

                           0.48367476


                           0.07232875

                          -0.12948537

                           0.20685762

                          -0.19044077


                          -0.32362783

                           0.36494362

                          -0.22735089

                          -0.10023338


                          -0.49740213

                           0.33463532

                           0.37881732

                           0.1822241


                          -0.3486371

                          -0.49346995

                          -0.40608948

                           0.37285012


                           0.24005288

                           0.42075223

                           0.26193494

                           0.12654608


                          -0.00489634

                          -0.38025302

                          -0.4283861

                          -0.46767431


                           0.20468098

                          -0.245484

                          -0.10062629

                          -0.28775263


                          -0.09111178

                          -0.35191745

                          -0.32670784

                           0.16585541",
                    rows=4*C_base, cols=C_base*1*1)
    gamma_bn3 = matrix(1, rows=4*C_base, cols=1)
    beta_bn3 = matrix(0, rows=4*C_base, cols=1)
    # downsample weights
    W_conv4 = matrix("     0.5406104

                           0.5869042


                          -0.16565567

                           0.6495562


                          -0.15492964

                           0.14268756


                          -0.3442585

                           0.41527158


                           0.62334496

                          -0.5187534


                           0.61461455

                           0.13234162


                           0.5224168

                           0.09576386


                           0.34095842

                          -0.09983712


                           0.5450986

                           0.10451669


                          -0.33010566

                           0.18024033


                          -0.32579

                          -0.08292443


                          -0.2871973

                           0.46907407


                          -0.558169

                          -0.32598352


                          -0.19966906

                          -0.42516384


                           0.06673896

                          -0.6983946


                           0.63859457

                          -0.60066473",
                    rows=4*C_base, cols=C_in*1*1)
    gamma_bn4 = matrix(1, rows=4*C_base, cols=1)
    beta_bn4 = matrix(0, rows=4*C_base, cols=1)

    weights = list(W_conv1, gamma_bn1, beta_bn1, W_conv2, gamma_bn2, beta_bn2,
                   W_conv3, gamma_bn3, beta_bn3, W_conv4, gamma_bn4, beta_bn4)
    mode = "train"

    ema_mean_bn1 = matrix(0, rows=C_base, cols=1)
    ema_var_bn1 = matrix(0, rows=C_base, cols=1)
    ema_mean_bn2 = matrix(0, rows=C_base, cols=1)
    ema_var_bn2 = matrix(0, rows=C_base, cols=1)
    ema_mean_bn3 = matrix(0, rows=4*C_base, cols=1)
    ema_var_bn3 = matrix(0, rows=4*C_base, cols=1)
    ema_mean_bn4 = matrix(0, rows=4*C_base, cols=1)
    ema_var_bn4 = matrix(0, rows=4*C_base, cols=1)

    ema_means_vars = list(ema_mean_bn1, ema_var_bn1, ema_mean_bn2, ema_var_bn2,
                          ema_mean_bn3, ema_var_bn3, ema_mean_bn4, ema_var_bn4)

    [out, Hout, Wout, ema_means_vars_up] = resnet::bottleneck_block_forward(X, weights, C_in, C_base, Hin, Win,
                                                                strideh, stridew, mode, ema_means_vars)

    Hout_exp = 2
    Wout_exp = 2
    out_expected = matrix("    0.         0.
                               0.         0.

                               0.         0.
                               0.         0.

                               0.9109738  0.
                               0.26423687 0.02831399

                               0.         1.1842504
                               0.         0.

                               0.         0.27886808
                               0.         0.

                               0.         0.
                               0.         0.

                               0.         0.4690894
                               0.         0.

                               0.         0.5754694
                               0.         0.

                               0.         0.
                               0.15799654 0.06399322

                               1.6746848  0.10162199
                               1.1494169  0.7138793

                               1.7823488  2.4663901
                               1.1404462  1.3706592

                               0.         0.5186337
                               0.         0.

                               0.46825778 1.802414
                               0.         0.

                               1.8138912  0.
                               2.061407   1.230821

                               1.5826645  0.
                               1.597543   1.0766873

                               0.         0.05367124
                               0.         0.


                               0.         0.
                               0.14620686 0.

                               0.         0.
                               0.5086571  0.7567121

                               0.         0.
                               0.         0.

                               0.22735572 0.93278456
                               0.3514644  0.19731534

                               0.36241722 0.7131092
                               0.4989733  0.43317872

                               0.         0.
                               0.         0.

                               0.46766508 0.79504216
                               0.88795483 0.6664516

                               0.37459964 0.99809396
                               0.4362625  0.5768033

                               0.         0.
                               0.         0.

                               0.67712426 0.07316476
                               0.9103337  0.88836694

                               0.8823242  0.8489517
                               0.75503683 0.45444334

                               0.23441726 1.0932865
                               0.0098927  0.47565216

                               0.2859242  0.03880775
                               0.80046034 0.08464086

                               0.         0.
                               0.         0.

                               0.         0.
                               0.         0.

                               0.         0.8421172
                               0.         0.02687168


                               2.295794   2.8480763
                               2.8238502  2.022955

                               1.1745573  0.23529911
                               2.7716846  0.32033563

                               0.23475814 0.3514259
                               0.3389814  0.

                               0.         0.14817369
                               0.         0.9291567

                               0.         0.
                               0.31184435 0.17355764

                               1.9307995  2.276723
                               1.5024273  2.3755558

                               0.         0.
                               0.94689417 0.

                               0.         0.
                               0.16562259 0.579775

                               1.3288593  2.229822
                               0.2227614  2.0304394

                               0.         0.
                               0.5008893  0.

                               0.         0.
                               0.         0.

                               0.         0.
                               0.         1.2533097

                               0.         0.
                               0.40518343 0.

                               0.         0.19982207
                               0.         0.

                               0.03520691 0.69359136
                               0.         0.04526865

                               0.48097372 1.0040715
                               0.         2.744193   ",
                          rows=N, cols=Hout_exp*Wout_exp*4*C_base)

    test_util::check_all_close(out, out_expected, 0.00001)
}

values_test_bottleneck_forward_1()

values_test_bottleneck_forward_2()
