
source("scripts/nn/networks/resnet.dml") as resnet
/*
 * (matrix[double] X, int Hin, int Win, int blocks,
 * int strideh, int stridew, int C_in, int C_base,
 * list[unknown] blocks_weights, string mode,
 * list[unknown] ema_means_vars)
 */

Hin = 4; Win = 4;
C_in = 2; C_base = 4;
N = 2
blocks = 2
strideh = 2; stridew = 2
mode = "train"

X = matrix(seq(1, N*Hin*Win*C_in), rows=N, cols=C_in*Hin*Win)

# weights for block 1
W_conv1 = matrix(" 0.18088163 -0.1094396   0.16322954
                  -0.16315436 -0.21879527 -0.13885644
                  -0.17897591 -0.03466086  0.00447898

                  -0.02060366  0.07391576 -0.13932472
                   0.19118743 -0.1424667   0.13759573
                   0.01909433 -0.09354833 -0.04176301


                   0.1272765   0.03356279  0.09614499
                  -0.19478372  0.00336599 -0.11832798
                  -0.167036   -0.21355109  0.09034546

                   0.08218841  0.09808768 -0.13677552
                   0.09094055 -0.2075183  -0.11292712
                   0.01358929  0.06142236  0.15713598


                  -0.07507452  0.17012559 -0.00778644
                  -0.17894624 -0.16280204 -0.20480031
                   0.17800058 -0.08244179  0.21474986

                   0.13779633 -0.09157459 -0.16890329
                  -0.18981671  0.01013687  0.19278602
                   0.12158521  0.14861913  0.16235258


                  -0.06423138 -0.08338779  0.03925912
                   0.08258285 -0.10299681 -0.02878706
                   0.09201117  0.1826442   0.04269032

                   0.23345782 -0.19535708 -0.04301685
                  -0.20099604  0.13898961 -0.13627604
                  -0.02552247  0.19012617  0.11112581", rows=C_base, cols=C_in*3*3)
gamma_bn1 = matrix(1, rows=C_base, cols=1)
beta_bn1 = matrix(0, rows=C_base, cols=1)
W_conv2 = matrix("-0.05845656 -0.10387342 -0.00347954
                  -0.10443704  0.07762128  0.08962621
                  -0.15254496 -0.11626967 -0.07093517

                   0.04007399  0.08974029 -0.08184759
                  -0.03026156 -0.12850255  0.11625351
                  -0.06768056  0.04290299 -0.11035781

                  -0.08182923 -0.07303425 -0.14692405
                   0.07654093  0.01254661 -0.08789502
                   0.12506868 -0.03339644  0.09265955

                  -0.0010149   0.06057359  0.13991983
                   0.07688661  0.0267771   0.0457534
                  -0.12409463  0.16171788  0.04298592


                   0.04832537 -0.03725861 -0.06689632
                  -0.06220818  0.14289887 -0.15294018
                   0.00162084  0.01681285 -0.16070186

                  -0.06003825  0.04543029 -0.10140823
                   0.12588196  0.0608999   0.12295659
                  -0.06011419 -0.08439511  0.14588566

                  -0.06961578  0.03729546  0.10786648
                  -0.04095362 -0.02719462  0.01085408
                   0.03948607  0.08386    -0.03532495

                   0.00769222  0.04593278 -0.09789048
                  -0.03487056  0.05989157 -0.09724655
                  -0.15379873 -0.07006194  0.14572401


                  -0.15647712  0.08853446 -0.0191143
                  -0.15235935  0.09655853  0.02425753
                  -0.03920817 -0.13884489 -0.15873407

                  -0.16632351 -0.15446958 -0.02832182
                   0.15606628 -0.07041912  0.09881757
                  -0.07226615  0.07085086 -0.03745939

                  -0.0293621  -0.14463028 -0.15513223
                   0.10102965 -0.11223143  0.16495053
                   0.00031853  0.158157   -0.13941693

                   0.10985805  0.11699991 -0.06803058
                  -0.08846518  0.13454668 -0.07047473
                   0.0816289  -0.03807278 -0.01125084


                  -0.1425793   0.04159175  0.0873092
                  -0.07806729  0.06501202  0.09965105
                   0.06275028  0.07400332  0.09444918

                  -0.08856728 -0.09136113 -0.07333919
                   0.04255192 -0.10251606  0.15050472
                   0.07791793  0.10539879 -0.06219628

                   0.12434496  0.16624264  0.08779152
                   0.00117178  0.13169001 -0.04333049
                  -0.07304269  0.14722325 -0.06679092

                  -0.08179037  0.15500171 -0.00718816
                  -0.1278541  -0.08474605 -0.10129128
                   0.07862437 -0.06843086 -0.04310509", rows=C_base, cols=C_base*3*3)
gamma_bn2 = matrix(1, rows=C_base, cols=1)
beta_bn2 = matrix(0, rows=C_base, cols=1)
# downsample parameters
W_conv3 = matrix("-0.41760927

                  -0.0473721


                  -0.14902914

                  -0.3806823


                   0.04111391

                   0.6815012


                   0.16695487

                   0.5603499   ", rows=C_base, cols=C_in*1*1)
gamma_bn3 = matrix(1, rows=C_base, cols=1)
beta_bn3 = matrix(0, rows=C_base, cols=1)
block1_weights = list(W_conv1, gamma_bn1, beta_bn1, W_conv2, gamma_bn2, beta_bn2, W_conv3, gamma_bn3, beta_bn3)

# EMAS for block 1
ema_mean_bn1 = matrix(1, rows=C_base, cols=1)
ema_var_bn1 = matrix(0, rows=C_base, cols=1)
ema_mean_bn2 = matrix(1, rows=C_base, cols=1)
ema_var_bn2 = matrix(0, rows=C_base, cols=1)
ema_mean_bn3 = matrix(1, rows=C_base, cols=1)
ema_var_bn3 = matrix(0, rows=C_base, cols=1)
block1_EMAs = list(ema_mean_bn1, ema_var_bn1, ema_mean_bn2, ema_var_bn2, ema_mean_bn3, ema_var_bn3)

# Weights for block 2
W_conv1_2 = matrix("-7.28789419e-02  7.32977241e-02 -1.16737187e-01
                    -1.09122857e-01  1.51534528e-02 -1.55087024e-01
                     1.54908732e-01 -1.46781862e-01  5.23662418e-02

                    -1.45408154e-01  9.34596211e-02 -1.57577261e-01
                    -1.62250042e-01 -2.06526369e-02  1.58289358e-01
                    -1.38804317e-04 -1.37716874e-01 -1.25059336e-01

                     5.44795990e-02 -1.56691819e-02  4.58848923e-02
                    -1.66475177e-01 -8.56291652e-02  9.89388674e-02
                    -3.30540538e-02 -4.98571396e-02 -1.48154795e-03

                    -1.63741872e-01  7.52360672e-02 -7.26198778e-02
                     7.97830820e-02 -1.53044373e-01  1.05956629e-01
                     1.42732725e-01 -4.19619307e-02  3.91238928e-03


                    -3.11080813e-02  6.24701530e-02 -8.18871707e-02
                    -2.80226916e-02  5.65987229e-02 -5.63029051e-02
                     9.20275897e-02 -1.50979385e-01  3.14275920e-03

                     4.63068485e-02 -7.43940473e-02 -1.23582803e-01
                    -4.84378934e-02 -1.62422940e-01  2.17949301e-02
                     1.48192182e-01 -9.01084542e-02  9.67378765e-02

                     1.82208419e-02  1.48985460e-01 -1.47735506e-01
                     8.09304416e-03  1.12461001e-02  2.95447111e-02
                    -1.24866471e-01  3.81960124e-02 -6.68919683e-02

                     5.13156503e-02  6.83855265e-02 -4.90674824e-02
                    -9.68660563e-02  3.40797305e-02 -1.13457203e-01
                    -2.67352313e-02 -8.27323049e-02 -7.86665529e-02


                    -1.18089557e-01  1.66068569e-01  4.50132638e-02
                     4.65527624e-02  1.10370263e-01  1.24886349e-01
                    -9.42516923e-02 -1.62573516e-01  7.66497254e-02

                     1.08407423e-01 -4.26756591e-02 -1.11639105e-01
                    -8.21658969e-02  2.47098356e-02 -7.98595399e-02
                    -1.54958516e-02  2.23536491e-02 -1.03785992e-02

                    -1.53956562e-02  1.13292173e-01 -2.27067471e-02
                    -2.12994069e-02  8.41291696e-02  1.61149070e-01
                    -1.32289156e-01 -7.05852732e-02  7.90221095e-02

                    -1.43424913e-01 -1.21421874e-01 -1.27822340e-01
                    -2.88078189e-02 -5.81898317e-02 -1.99964195e-02
                     1.16435274e-01 -1.30379200e-03 -4.03594971e-02


                    -1.00988328e-01  6.64077997e-02 -1.31890640e-01
                    -1.35123342e-01 -1.37298390e-01  8.09081197e-02
                     3.08579355e-02  7.35761523e-02  1.45316467e-01

                     9.22436267e-02  3.85234505e-02  3.37007642e-02
                     4.96874899e-02  2.56118029e-02 -2.25261599e-02
                     6.15442246e-02  7.31151104e-02  1.47016749e-01

                    -7.32975453e-02 -6.77637309e-02  2.41905302e-02
                    -1.47778392e-01 -1.27045453e-01 -3.37420404e-03
                    -1.08250901e-01 -8.57535824e-02 -7.87658989e-03

                    -3.25922221e-02 -8.58756527e-02  7.44262338e-02
                    -1.37389064e-01  7.38748461e-02 -7.68387318e-02
                     1.25040159e-01 -6.90028891e-02 -5.00665307e-02", rows=C_base, cols=C_base*3*3)
gamma_bn1_2 = matrix(1, rows=C_base, cols=1)
beta_bn1_2 = matrix(0, rows=C_base, cols=1)
W_conv2_2 = matrix("-0.02658759  0.02687277 -0.11249679
                   0.07110029 -0.1287723   0.14960568
                   0.00347126  0.082368    0.1592095

                   0.01121612 -0.01054858 -0.11533582
                   0.00191922 -0.09345891  0.0201468
                   0.16406216  0.1631505  -0.12568823

                   0.10923527  0.0047278   0.08264925
                   0.03556542 -0.11967081 -0.03904144
                   0.06578751 -0.11364846 -0.06719196

                  -0.02243698 -0.15126523 -0.16504839
                   0.03257662  0.03516276 -0.00604182
                   0.00565775  0.15348013 -0.08239889


                  -0.10838002  0.03725785 -0.01738496
                   0.01061849  0.00593401 -0.14623034
                  -0.04515064  0.11624385  0.07984154

                   0.02820455  0.14632984  0.11314054
                   0.1556999   0.06233911  0.04464059
                   0.16220112  0.12387766 -0.01516332

                   0.11520021  0.03099509  0.11585347
                   0.0215022   0.09577711  0.12590684
                   0.12393482 -0.00796187 -0.1233204

                  -0.01217443 -0.09484772 -0.13615403
                  -0.06195782 -0.10316825 -0.13738668
                   0.04165971 -0.16430686  0.1249779


                  -0.06067413  0.09290363 -0.10419172
                   0.04424816  0.16639026 -0.01638204
                  -0.01993459  0.16510008 -0.03844319

                  -0.06738343 -0.15954465  0.14164312
                  -0.09711097  0.04057109 -0.06419432
                  -0.15190187  0.02492356  0.14873762

                   0.05357671 -0.02110486 -0.07781315
                  -0.12230659  0.13541014  0.04158884
                   0.13525964  0.07432733  0.04886186

                  -0.04131328  0.05893086  0.08948417
                   0.15411825  0.05368501 -0.13857502
                   0.15523924 -0.1510986   0.01617928


                   0.14878072  0.15607525 -0.12842798
                   0.00907773  0.09931238  0.03955895
                   0.04165536 -0.0382842   0.06571688

                  -0.0926128  -0.15800306 -0.0235941
                   0.03582941 -0.13953064  0.03686035
                  -0.15508795  0.06028162 -0.15286762

                   0.00642897 -0.01605938 -0.10140433
                   0.09824272  0.13854371  0.13406266
                   0.13023908 -0.10159403 -0.08961493

                  -0.0350284   0.08208416  0.11221837
                  -0.07019123  0.00895458  0.10123546
                  -0.04459848  0.15377314  0.04990514", rows=C_base, cols=C_base*3*3)
gamma_bn2_2 = matrix(1, rows=C_base, cols=1)
beta_bn2_2 = matrix(0, rows=C_base, cols=1)
block2_weights = list(W_conv1_2, gamma_bn1_2, beta_bn1_2, W_conv2_2, gamma_bn2_2, beta_bn2_2)

# EMAS for block 1
ema_mean_bn1_2 = matrix(1, rows=C_base, cols=1)
ema_var_bn1_2 = matrix(0, rows=C_base, cols=1)
ema_mean_bn2_2 = matrix(1, rows=C_base, cols=1)
ema_var_bn2_2 = matrix(0, rows=C_base, cols=1)
block2_EMAs = list(ema_mean_bn1_2, ema_var_bn1_2, ema_mean_bn2_2, ema_var_bn2_2)

expected_Hout = 2
expected_Wout = 2
expected_out = matrix("1.9154322  1.3386528
                       0.         0.17239538

                       1.1703718  1.765771
                       0.         0.48162544

                       0.         0.
                       0.5448834  0.

                       0.5596865  0.
                       1.7399819  0.


                       0.         2.4118602
                       0.         0.32017422

                       0.45649305 1.0522902
                       1.0418018  1.2802167

                       3.914177   0.7292799
                       0.         1.287521

                       0.         0.71220785
                       2.7913036  0.6481694 ", rows=2, cols=C_base*expected_Hout*expected_Wout)

blocks_weights = list(block1_weights, block2_weights)
ema_means_vars = list(block1_EMAs, block2_EMAs)
[out, Hout, Wout, ema_means_vars_upd] = resnet::basic_reslayer_forward(X, Hin, Win, blocks,
                                                          strideh, stridew, C_in, C_base,
                                                          blocks_weights, mode, ema_means_vars)
print(toString(ema_means_vars_upd))
print(toString(out))
